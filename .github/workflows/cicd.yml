# name: CI/CD

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout Source
#         uses: actions/checkout@v3

#       - name: Log in to Docker Hub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}

#       - name: Build Docker Image
#         run: docker build -t ${{ secrets.DOCKER_USERNAME }}/connect360:latest .

#       - name: Push Docker Image
#         run: docker push ${{ secrets.DOCKER_USERNAME }}/connect360:latest

#   deploy:
#     needs: build
#     runs-on: connect-flask
#     steps:
#       - name: Pull Docker Image from Docker Hub
#         run: sudo docker pull ${{ secrets.DOCKER_USERNAME }}/connect360:latest

#       - name: Stop and Remove Old Container (if exists)
#         run: |
#           CONTAINER_ID=$(sudo docker ps -aq --filter "name=connect360")
#           if [ -n "$CONTAINER_ID" ]; then
#               echo "Stopping & removing old container..."
#               sudo docker stop $CONTAINER_ID
#               sudo docker rm -f $CONTAINER_ID
#           else
#               echo "No existing container found. Skipping removal."
#           fi

#       - name: Run Docker Container with ENV Variables
#         run: |
#           sudo docker run -d -p 5000:5000 \
#           --name connect360 \
#           -e OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} \
#           -e ENCRYPTION_KEY="${{ secrets.ENCRYPTION_KEY }}" \
#           -e INTERNAL_API_KEY="${{ secrets.INTERNAL_API_KEY }}" \
#           -e ASTERISK_PUBLIC_IP=${{ secrets.ASTERISK_PUBLIC_IP }} \
#           -e ASTERISK_USERNAME=${{ secrets.ASTERISK_USERNAME }} \
#           -e ASTERISK_PASSWORD=${{ secrets.ASTERISK_PASSWORD }} \
#           -e TWILIO_ACCOUNT_SID=${{ secrets.TWILIO_ACCOUNT_SID }} \
#           -e TWILIO_AUTH_TOKEN=${{ secrets.TWILIO_AUTH_TOKEN }} \
#           -e TWILIO_API_KEY=${{ secrets.TWILIO_API_KEY }} \
#           -e TWILIO_API_SECRET=${{ secrets.TWILIO_API_SECRET }} \
#           -e TWILIO_TWIML_APP_SID=${{ secrets.TWILIO_TWIML_APP_SID }} \
#           -e TWILIO_NUMBER=${{ secrets.TWILIO_NUMBER }} \
#           -e TWILIO_PHONE_NUMBER=${{ secrets.TWILIO_PHONE_NUMBER }} \
#           -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
#           -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
#           -e S3_BUCKET=${{ secrets.S3_BUCKET }} \
#           -e S3_REGION=${{ secrets.S3_REGION }} \
#           -e S3_ACCESS_KEY_RECORDING=${{ secrets.S3_ACCESS_KEY_RECORDING }} \
#           -e S3_SECRET_KEY_RECORDING=${{ secrets.S3_SECRET_KEY_RECORDING }} \
#           -e DATABASE_URL=${{ secrets.DATABASE_URL }} \
#           -e TRUNK_SID=${{ secrets.TRUNK_SID }} \
#           -e ASSISTANT_ID=${{ secrets.ASSISTANT_ID }} \
#           -e FLASK_ENV=${{ secrets.FLASK_ENV }} \
#           -e VAPI_API_KEY=${{ secrets.VAPI_API_KEY }} \
#           -e OB_ASSISTANT_VAPI_ID=${{ secrets.OB_ASSISTANT_VAPI_ID }} \
#           -e OB_CALL_PHONE_ID=${{ secrets.OB_CALL_PHONE_ID }} \
#           -e OB_ASSISTANT_MAIN_ID=${{ secrets.OB_ASSISTANT_MAIN_ID }} \
#           -e ASTERISK_SSH_USER=${{ secrets.ASTERISK_SSH_USER }} \
#           -e ASTERISK_HOST=${{ secrets.ASTERISK_HOST }} \
#           -e ASTERISK_PORT=${{ secrets.ASTERISK_PORT }} \
#           -e PROVISION_PASSWORD=${{ secrets.PROVISION_PASSWORD }} \
#           -e ASTERISK_SECRET=${{ secrets.ASTERISK_SECRET }} \
#           ${{ secrets.DOCKER_USERNAME }}/connect360:latest

#       - name: Check Running Containers
#         run: sudo docker ps
