name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/ticketbackend:latest .

      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/ticketbackend:latest

  deploy:
    needs: build
    runs-on: ticket_backend  # make sure self-hosted runner 'ticket' is registered
    steps:
      - name: Pull Docker Image from Docker Hub
        run: sudo docker pull ${{ secrets.DOCKER_USERNAME }}/ticketbackend:latest

      - name: Remove Old Container (if exists)
        run: |
          CONTAINER_ID=$(sudo docker ps -aq --filter "name=ticketbackend")
          if [ -n "$CONTAINER_ID" ]; then
            sudo docker stop $CONTAINER_ID
            sudo docker rm -f $CONTAINER_ID
          fi

      - name: Run Docker Container
        run: |
            sudo docker run -d -p 5000:5000 \
            -e FLASK_APP=run.py \
            -e FLASK_ENV=production \
            -e FLASK_DEBUG=1 \
            -e FLASK_CONFIG=config.ProductionConfig \
            -e DATABASE_URL=${{ secrets.DATABASE_URL }} \
            -e SECRET_KEY=${{ secrets.SECRET_KEY }} \
            -e X_API_KEY=${{ secrets.X_API_KEY }} \
            -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
            -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
            -e S3_BUCKET=${{ secrets.S3_BUCKET }} \
            -e S3_REGION=${{ secrets.S3_REGION }} \
            -e MAILGUN_API_URL=${{ secrets.MAILGUN_API_URL }} \
            -e MAILGUN_API_KEY=${{ secrets.MAILGUN_API_KEY }} \
            -e MAILGUN_DOMAIN=${{ secrets.MAILGUN_DOMAIN }} \
            --name ticketbackend \
            ${{ secrets.DOCKER_USERNAME }}/ticketbackend:latest


      - name: Check Container Status
        run: sudo docker ps
